package hr.tom.malwaredb.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import hr.tom.malwaredb.entity.DatabaseManager;
import hr.tom.malwaredb.entity.MessageConfig;
import hr.tom.malwaredb.entity.MessageType;

/**
 * Controller class used for registration page.
 * 
 * @author Tom.K
 *
 */
@Controller
public class RegisterController {

	@Autowired
	JdbcTemplate jdbcTemplate;

	@Autowired
	MessageSource messageSource;

	@Autowired
	BCryptPasswordEncoder bcryptEncoder;

	/**
	 * Generates "register" template page.
	 * 
	 * @param model
	 *            Template model.
	 * @return Template page "register.html".
	 */
	@RequestMapping(value = "/register")
	public String register(Model model) {
		return "register";
	}

	/**
	 * Redirects to "/" along with creating new user. Activation required by
	 * enabling user from administration page.
	 * 
	 * @param model
	 *            Template model.
	 * @param redirectAttributes
	 *            Attributes to be applied on redirect page.
	 * @param username
	 *            Username used for new user.
	 * @param password
	 *            Password used for new user.
	 * @return Redirect to "/".
	 */
	@RequestMapping(value = "/register/apply")
	public String addUser(Model model, RedirectAttributes redirectAttributes, @RequestParam("username") String username,
			@RequestParam("password") String password) {
		// Encrypt password with bcrypt password encoder for security purposes.
		String hashPassword = bcryptEncoder.encode(password);
		if (DatabaseManager.addUser(jdbcTemplate, username, hashPassword)) {
			MessageConfig.setMessage(redirectAttributes, messageSource, "message.register.success", MessageType.INFO);
		} else {
			MessageConfig.setMessage(redirectAttributes, messageSource, "message.register.failure", MessageType.INFO);
		}
		return "redirect:/";
	}
}
