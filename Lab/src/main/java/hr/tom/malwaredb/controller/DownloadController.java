package hr.tom.malwaredb.controller;

import java.io.File;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.FileSystemResource;
import org.springframework.http.MediaType;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import hr.tom.malwaredb.entity.DatabaseManager;
import hr.tom.malwaredb.entity.MalwareObject;

/**
 * Controller class used for downloading files.
 * 
 * @author Tom.K
 * 
 */
@Controller
public class DownloadController {

	@Autowired
	JdbcTemplate jdbcTemplate;

	/**
	 * Requests file sample for specified malware.
	 * 
	 * @param id
	 *            Malware ID from DB.
	 * @param response
	 *            Servlet response object, used for setting header.
	 * @return File sample resource for download.
	 */
	@RequestMapping(method = RequestMethod.GET, value = "/download/{id}", produces = MediaType.APPLICATION_OCTET_STREAM_VALUE)
	@ResponseBody
	public FileSystemResource download(@PathVariable("id") Integer malwareId, HttpServletResponse response) {
		// Get malware object from DB.
		MalwareObject malware = DatabaseManager.getMalwareDetails(jdbcTemplate, malwareId);
		// Define sample file path.
		String samplePath = "upload" + "/" + malwareId + "/" + malwareId;
		// Force renaming file to malware name with .zip extension.
		response.setHeader("Content-Disposition", "attachment; filename=" + malware.getName() + ".zip");
		return new FileSystemResource(new File(samplePath));
	}
}
