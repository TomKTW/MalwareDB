package hr.tom.malwaredb.controller;

import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import hr.tom.malwaredb.entity.DatabaseManager;
import hr.tom.malwaredb.entity.MessageConfig;
import hr.tom.malwaredb.entity.MessageType;

/**
 * Controller class used for pages related to creating entry.
 * 
 * @author Tom.K
 * 
 */
@Controller
public class CreateController {

	@Autowired
	JdbcTemplate jdbcTemplate;

	@Autowired
	MessageSource messageSource;

	/**
	 * Generates "create" template page.
	 * 
	 * @param model
	 *            Template model.
	 * @return Template page "create.html".
	 */
	@RequestMapping("/create")
	public String create(Model model) {
		return "create";
	}

	/**
	 * Redirects to "/" or "/create" depending on success with adding new entry
	 * to DB.
	 * 
	 * @param model
	 *            Template model.
	 * @param redirectAttributes
	 *            Attributes to be applied on redirect page.
	 * @param name
	 *            Name of malware.
	 * @param type
	 *            Type of malware.
	 * @param platform
	 *            Platform of malware.
	 * @param sourceLanguage
	 *            Source language of malware.
	 * @param fileType
	 *            File type of malware.
	 * @param size
	 *            File size of malware.
	 * @param author
	 *            Author of malware.
	 * @param origin
	 *            Country origin of malware.
	 * @param dateDiscovery
	 *            Discovery date of malware.
	 * @param description
	 *            Description of malware.
	 * @return Redirect to "/" if successful, otherwise redirects to "/create".
	 */
	@RequestMapping("/submit")
	public String submit(Model model, RedirectAttributes redirectAttributes,
			@RequestParam(value = "name", required = false) String name,
			@RequestParam(value = "type", required = false) String type,
			@RequestParam(value = "platform", required = false) String platform,
			@RequestParam(value = "source_language", required = false) String sourceLanguage,
			@RequestParam(value = "file_type", required = false) String fileType,
			@RequestParam(value = "size", required = false) Integer size,
			@RequestParam(value = "author", required = false) String author,
			@RequestParam(value = "origin", required = false) String origin,
			@RequestParam(value = "date_discovery", required = false) @DateTimeFormat(pattern = "yyyy-MM-dd") Date dateDiscovery,
			@RequestParam(value = "description", required = false) String description) {
		if (DatabaseManager.createEntry(jdbcTemplate, name, type, platform, sourceLanguage, fileType, size, author,
				origin, dateDiscovery, description)) {
			MessageConfig.setMessage(redirectAttributes, messageSource, "message.create.success", MessageType.INFO);
			return "redirect:/";
		} else {
			MessageConfig.setMessage(redirectAttributes, messageSource, "message.create.failure", MessageType.ERROR);
			return "redirect:/create";
		}
	}
}
