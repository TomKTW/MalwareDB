package hr.tom.malwaredb.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import hr.tom.malwaredb.entity.DatabaseManager;
import hr.tom.malwaredb.entity.MessageConfig;
import hr.tom.malwaredb.entity.MessageType;
import hr.tom.malwaredb.entity.UserObject;

/**
 * Controller class used for pages related to administration.
 * 
 * @author Tom.K
 * 
 */
@Controller
public class AdminController {

	@Autowired
	JdbcTemplate jdbcTemplate;

	@Autowired
	MessageSource messageSource;

	/**
	 * Generates "admin" template page, fetching users from DB.
	 * 
	 * @param model
	 *            Template model.
	 * @return Template page "admin.html".
	 */
	@RequestMapping(value = "/admin")
	public String admin(Model model) {
		List<UserObject> userList = DatabaseManager.getUserList(jdbcTemplate);
		model.addAttribute("userList", userList);
		return "admin";
	}

	/**
	 * Redirects to "/admin", along with deleting specified user.
	 * 
	 * @param model
	 *            Template model.
	 * @param redirectAttributes
	 *            Attributes to be applied on redirect page.
	 * @param user
	 *            User selected for deletion.
	 * @return Redirect to "/admin".
	 */
	@RequestMapping(value = "/admin/delete")
	public String deleteUser(Model model, RedirectAttributes redirectAttributes, @RequestParam("user") String user) {
		if (DatabaseManager.deleteUser(jdbcTemplate, user)) {
			MessageConfig.setMessage(redirectAttributes, messageSource, "message.admin.delete.user.success",
					new Object[] { user }, MessageType.INFO);
		} else {
			MessageConfig.setMessage(redirectAttributes, messageSource, "message.admin.delete.user.failure",
					new Object[] { user }, MessageType.ERROR);
		}
		return "redirect:/admin";
	}

	/**
	 * Redirects to "/admin", along with enabling/disabling specified user.
	 * 
	 * @param model
	 *            Template model.
	 * @param redirectAttributes
	 *            Attributes to be applied on redirect page.
	 * @param user
	 *            User selected for enabling/disabling.
	 * @param enabled
	 *            Current status of selected user.
	 * @return Redirect to "/admin".
	 */
	@RequestMapping(value = "/admin/toggle")
	public String toggleUser(Model model, RedirectAttributes redirectAttributes, @RequestParam("user") String user,
			@RequestParam("enabled") Boolean enabled) {
		// Invert access status to user based on current status.
		if (DatabaseManager.toggleUser(jdbcTemplate, user, !enabled)) {
			if (enabled) {
				MessageConfig.setMessage(redirectAttributes, messageSource, "message.admin.disable.user.success",
						new Object[] { user }, MessageType.INFO);
			} else {
				MessageConfig.setMessage(redirectAttributes, messageSource, "message.admin.enable.user.success",
						new Object[] { user }, MessageType.INFO);
			}
		} else {
			if (enabled) {
				MessageConfig.setMessage(redirectAttributes, messageSource, "message.admin.disable.user.failure",
						new Object[] { user }, MessageType.ERROR);
			} else {
				MessageConfig.setMessage(redirectAttributes, messageSource, "message.admin.enable.user.failure",
						new Object[] { user }, MessageType.ERROR);
			}
		}
		return "redirect:/admin";
	}
}
